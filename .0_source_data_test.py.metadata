{"timestamp": 1728233443.291854, "stored_source_code": "# declare a list tasks whose products you want to use as inputs\nupstream = None\n\nimport numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom plotnine import ggplot, aes, geom_bar, theme_minimal, labs, theme, element_text\n# file path to data\nfilename = \"/Users/lukastang/Documents/GitHub/Model_Interpretability/data/Obesity_Dataset.xlsx\"\n# Read the Excel file\n# Define the relative path to the folder and the Excel file\nobesity_dataset = pd.read_excel(filename , sheet_name=\"obesity_dataset\")\nobesity_dataset_mappings = pd.read_excel(filename, sheet_name=\"mappings\")\n# Print the head of the dataset\nprint(obesity_dataset.head())\ndef map_variable(df, mappings, variable):\n    mapping_dict = mappings[mappings['Variable'] == variable].set_index('Value')['Mapping'].to_dict()\n    df[variable + '_mapped'] = df[variable].map(mapping_dict)\nvariables_to_map = [\n    'Sex', 'Overweight_Obese_Family', 'Consumption_of_Fast_Food', \n    'Frequency_of_Consuming_Vegetables', 'Number_of_Main_Meals_Daily', \n    'Food_Intake_Between_Meals', 'Smoking', 'Liquid_Intake_Daily', \n    'Calculation_of_Calorie_Intake', 'Physical_Excercise', \n    'Schedule_Dedicated_to_Technology', 'Type_of_Transportation_Used', 'Class'\n]\nfor variable in variables_to_map:\n    map_variable(obesity_dataset, obesity_dataset_mappings, variable)\n# Print the head of the dataset with mapped variables\nprint(obesity_dataset.head())\nSome Visualizations\n# Plot distribution of the mapped 'Class' variable\nplt.figure(figsize=(10, 6))\nsns.countplot(data=obesity_dataset, x='Class_mapped')\nplt.title('Distribution of Obesity Classes')\nplt.xlabel('Obesity Class')\nplt.ylabel('Count')\nplt.xticks(rotation=45)\nplt.show()\n# Plot distribution of the mapped 'Class' variable using plotnine\nplot = (\n    ggplot(obesity_dataset, aes(x='Class_mapped')) +\n    geom_bar() +\n    theme_minimal() +\n    labs(title='Distribution of Obesity Classes', x='Obesity Class', y='Count') +\n    theme(axis_text_x=element_text(rotation=45, hjust=1))\n)\nprint(plot)\n# Save the DataFrame to a CSV file\nobesity_dataset.to_csv(\"output/0_source_data/obesity_dataset.csv\", index=False)\nprint(\"Obesity data generated and saved to 'obesity_dataset.csv'\")", "params": {}}